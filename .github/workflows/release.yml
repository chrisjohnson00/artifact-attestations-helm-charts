name: Release

on:
  workflow_call:
    inputs:
      chart_name:
        type: string
        required: true
      chart_release:
        type: string
        required: true

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      attestations: write
      contents: read
      id-token: write
      packages: write
    env:
      REGISTRY: ghcr.io
    steps:
      - name: Checkout repository
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
      - name: Extract Helm chart name and version
        id: release-details
        run: |
          # tag names are in the format <chart-name>-v<semantic-version>
          # so we need to extract the chart name
          release_name=$(echo -n ${{ inputs.chart_release }} | awk -F'-v' '{print $1}')
          echo release_name=$release_name >> $GITHUB_OUTPUT

          # extract the version from the tag name
          version=$(echo -n ${{ inputs.chart_release }} | sed "s/^$release_name-//")
          echo release_version=$version >> $GITHUB_OUTPUT
      - name: Package Helm chart
        run: helm package charts/${{ steps.release-details.outputs.release_name }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push packaged chart to GHCR
        run: helm push ${{ inputs.chart_name }}.tgz oci://${{ env.REGISTRY }}/${{ github.repository }}
      - uses: imjasonh/setup-crane@00c9e93efa4e1138c9a7a5c594acd6c75a2fbf0c # v0.3
      - name: Get pushed chart digest
        id: get-digest
        run: |
          digest=$(crane digest ${{ env.REGISTRY }}/${{ github.repository }}/${{ steps.release-details.outputs.release_name }}:${{ steps.release-details.outputs.release_version }})
          echo digest=$digest >> $GITHUB_OUTPUT
      - name: Attest
        uses: actions/attest-build-provenance@173725a1209d09b31f9d30a3890cf2757ebbff0d # v1.1.2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ github.repository }}/${{ steps.release-details.outputs.release_name }}
          subject-digest: ${{ steps.get-digest.outputs.digest }}
          push-to-registry: true
